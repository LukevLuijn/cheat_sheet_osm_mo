@startuml
'https://plantuml.com/state-diagram

state s1 as "simple state1" {
    s1 : **entry** / doe iets eenmalig
    s1 : **do** / doe iets continue
    s1 : doe iets dadelijk / **defer**
    s1 : **exit** / doe iets eenmalig
}

state s2 as "simple state2"{
    s2 : **entry** / doe iets eenmalig
    s2 : **do** / doe iets continue
    s2 : doe iets dadelijk / **defer**
    s2 : **exit** / doe iets eenmalig
}

[*] -right-> s1
note top on link #FCA985
    **initial state:**
    --
    Hier begint de state machine.
end note

s1 -right-> s2 : trigger(params)[guard]/action

s2 -right-> [*]
note top on link #FCA985
    **final state:**
    --
    Hier eindigt de state machine.
end note

note as n1 #FCA985
    **entry:**
    --
    Activiteit die eenmalig
    uitgevoerd wordt wanneer
    de state actief wordt.
end note

note as n2 #FCA985
    **do:**
    --
    Activiteit die continue
    uitgevoerd wordt tot dat
    de exit aangeroepen wordt.
end note

note as n3 #FCA985
    **exit:**
    --
    Activiteit die uitgevoerd
    wordt wanneer een transitie
    naar een andere state
    ge-triggerd wordt.
end note

note as n4 #FCA985
    **state naam**
    --
    Geeft de naam van de state
    weer.
end note

note as n5 #FCA985
    **deferable trigger**
    --
    Een bepaalde evenement die
    geen transitie triggerd.

    Wanneer er een defer plaats
    vindt zal deze in de wacht
    gezet worden.
    Wanneer een state transitie
    plaatsvind zal deze defer
    uitgevoerd worden.
end note

note as n6 #FCA985
    **terminate**
    --
    Wanneer er een evenement
    plaats heeft gevonden waardoor
    de statemachine vroegtijdig is
    afgesloten.
    Terminate wordt weergegeven
    doormiddel van een pijl vanaf
    de state naar een **X** (kruis)

    Terminate kan bijvoorbeeld
    aangeroepen worden door een
    "power off"-activiteit.
end note

n1 -up-> s1
n2 -up-> s1
n3 -up-> s1

n4 -down-> s2
n5 -down-> s2
n6 -down-> s2

@enduml